name: Deploy Spring Boot Application to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      APPLICATION_NAME: "simple-java"
      ENVIRONMENT_NAME: "simple-java-env"
      AWS_REGION: "eu-central-1"

    steps:
    # Step 1: Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Java
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: "21"
        distribution: "corretto"

    # Step 3: Build the Spring Boot application using Maven
    - name: Build with Maven
      run: mvn clean package

    # Step 4: Find the latest JAR file dynamically
    - name: Find the JAR file
      id: jarfile
      run: |
        JAR_FILE=$(ls target/*.jar | head -n 1)
        echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

    # Step 5: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Step 6: Upload the JAR file to S3
    - name: Upload JAR to S3
      run: |
        aws s3 cp ${{ env.JAR_FILE }} s3://${{ secrets.S3_BUCKET }}/

    # Step 7: Deploy to Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ env.APPLICATION_NAME }} \
          --version-label $GITHUB_SHA \
          --source-bundle S3Bucket=${{ secrets.S3_BUCKET }},S3Key=$(basename ${{ env.JAR_FILE }})

        aws elasticbeanstalk update-environment \
          --application-name ${{ env.APPLICATION_NAME }} \
          --environment-name ${{ env.ENVIRONMENT_NAME }} \
          --version-label $GITHUB_SHA
