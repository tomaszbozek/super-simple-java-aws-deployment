name: Deploy Spring Boot Application to Elastic Beanstalk

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'eu-central-1'
      application_name:
        description: 'Elastic Beanstalk Application Name'
        required: true
        default: 'simple-java'
      environment_name:
        description: 'Elastic Beanstalk Environment Name'
        required: true
        default: 'simple-java-env'
      s3_bucket:
        description: 'S3 Bucket for Deployment'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ github.event.inputs.aws_region || secrets.AWS_REGION }}
      APPLICATION_NAME: ${{ github.event.inputs.application_name || secrets.APPLICATION_NAME }}
      ENVIRONMENT_NAME: ${{ github.event.inputs.environment_name || secrets.ENVIRONMENT_NAME }}
      S3_BUCKET: ${{ github.event.inputs.s3_bucket || secrets.S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    # Step 1: Check out the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Java (corretto 21)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'corretto'

    # Step 3: Build the Spring Boot application using Maven
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Step 4: Find the latest JAR file in the target directory
    - name: Find the JAR file
      id: jarfile
      run: |
        JAR_FILE=$(ls target/*.jar | head -n 1)
        echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

    # Step 5: Configure AWS credentials using GitHub Secrets
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Step 6: Upload the JAR file to the S3 bucket
    - name: Upload JAR to S3
      run: |
        aws s3 cp ${{ env.JAR_FILE }} s3://${{ env.S3_BUCKET }}/$(basename ${{ env.JAR_FILE }})

    # Step 7: Deploy to Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ env.APPLICATION_NAME }} \
          --version-label $GITHUB_SHA \
          --source-bundle S3Bucket=${{ env.S3_BUCKET }},S3Key=$(basename ${{ env.JAR_FILE }})

        aws elasticbeanstalk update-environment \
          --application-name ${{ env.APPLICATION_NAME }} \
          --environment-name ${{ env.ENVIRONMENT_NAME }} \
          --version-label $GITHUB_SHA
